name: HTTP benchmarks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      frameworks: ${{ steps.matrix.outputs.frameworks }}

    steps:
    - uses: actions/checkout@v4

    - name: Generate http matrix
      id: matrix
      working-directory: http
      run: |
        FRAMEWORKS="["
        for framework in $(ls -d */); do
          FRAMEWORKS="${FRAMEWORKS}\"${framework::-1}\","
        done
        FRAMEWORKS="${FRAMEWORKS}]"
        echo ${FRAMEWORKS}
        echo "frameworks=${FRAMEWORKS}" >> ${GITHUB_OUTPUT}

  benchmark:
    runs-on: ubuntu-latest
    needs:
    - setup

    strategy:
      fail-fast: false
      matrix:
        framework: ${{fromJson(needs.setup.outputs.frameworks)}}
        
    steps:
    - uses: actions/checkout@v4

    - name: Setup Babashka
      if: startsWith(matrix.framework, 'babashka-')
      run: |
        bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)

    - name: Setup CL
      if: startsWith(matrix.framework, 'cl-')
      run: |
        sudo apt-get install -y sbcl
        sbcl --version

    - name: Setup Go
      uses: actions/setup-go@v5
      if: startsWith(matrix.framework, 'golang-')
      with:
        cache-dependency-path: http/${{ matrix.framework }}/go.sum
        go-version-file: http/${{ matrix.framework }}/go.mod
    
    - name: Setup Guile 2
      if: startsWith(matrix.framework, 'guile-2')
      run: |
        sudo apt-get install -y guile-2.2
        guile --version
    
    - name: Setup Guile 3
      if: startsWith(matrix.framework, 'guile-3')
      run: |
        sudo apt-get install -y guile-3.0
        guile --version

    - name: Setup .NET
      if: startsWith(matrix.framework, 'csharp-') || startsWith(matrix.framework, 'fsharp-')
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x
    
    - name: Setup Node.js
      if: startsWith(matrix.framework, 'javascript-')
      uses: actions/setup-node@v4
      with:
        node-version: 18.x

    - name: Setup Racket
      if: startsWith(matrix.framework, 'racket-')
      run: |
        sudo apt-get install -y racket

    - name: Setup Rust
      if: startsWith(matrix.framework, 'rust-')
      run: |
        rustup toolchain install nightly
        rustup default nightly
        cargo version

    - name: Benchmark ${{ matrix.framework }}
      working-directory: http
      run: |
        ./benchmark.bash ${{ matrix.framework }}
    
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.framework }}-report
        path: ./http/${{ matrix.framework }}.report

  pass:
    runs-on: ubuntu-latest
    if: success()

    needs:
    - benchmark

    steps:
    - name: Pass
      run: echo "All benchmarks passed"
  
  fail:
    runs-on: ubuntu-latest
    if: failure()

    needs:
    - benchmark

    steps:
    - name: Fail
      run: echo "Some benchmarks failed"
